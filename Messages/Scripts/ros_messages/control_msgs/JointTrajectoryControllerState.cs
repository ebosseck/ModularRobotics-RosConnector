// generated by RosbridgeMessageGenerator
// generated on 22 May 2025, 00:29:59

using System;
using System.Collections.Generic;

using Riptide;
using Visus.Robotics.RosBridge;

using ros_messages.std_msgs;
using ros_messages.trajectory_msgs;

namespace ros_messages.control_msgs
{
    public class JointTrajectoryControllerStateMsg : ROSMessage
    {

        

        #region Registration

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void _registerMessage () {
            ROSMessageFactory.registerMessage(_ROS_MESSAGE_ID, delegate(Message msg)
            {
                return new JointTrajectoryControllerStateMsg(msg);
            });
        }

        #endregion

        public HeaderMsg header;
        public List<string> joint_names;
        public JointTrajectoryPointMsg desired;
        public JointTrajectoryPointMsg actual;
        public JointTrajectoryPointMsg error;

        public const string _ROS_MESSAGE_ID = "control_msgs/JointTrajectoryControllerState";

        public JointTrajectoryControllerStateMsg(HeaderMsg header = null, List<string> joint_names = null, JointTrajectoryPointMsg desired = null, JointTrajectoryPointMsg actual = null, JointTrajectoryPointMsg error = null) : base()
        {
            this.header = header;
            this.joint_names = joint_names;
            this.desired = desired;
            this.actual = actual;
            this.error = error;
        }

        public JointTrajectoryControllerStateMsg(Message message) : base()
        {
            this.deserializeFromMessage(message);
        }


        #region Serialization

        public override void serializeToMessage(Message message, bool includeHeader = true)
        {
            if (includeHeader) {
                message.AddString(_ROS_MESSAGE_ID);
            }
            this.header.serializeToMessage(message, includeHeader: false);
            message.AddStrings(this.joint_names.ToArray());
            this.desired.serializeToMessage(message, includeHeader: false);
            this.actual.serializeToMessage(message, includeHeader: false);
            this.error.serializeToMessage(message, includeHeader: false);
        }

        public override void deserializeFromMessage(Message message)
        {
            this.header = new HeaderMsg();
            this.header.deserializeFromMessage(message);
            this.joint_names = new List<string>(message.GetStrings());
            this.desired = new JointTrajectoryPointMsg();
            this.desired.deserializeFromMessage(message);
            this.actual = new JointTrajectoryPointMsg();
            this.actual.deserializeFromMessage(message);
            this.error = new JointTrajectoryPointMsg();
            this.error.deserializeFromMessage(message);
        }

        #endregion
    }
}
