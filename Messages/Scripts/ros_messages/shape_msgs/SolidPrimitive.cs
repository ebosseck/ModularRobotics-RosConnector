// generated by RosbridgeMessageGenerator
// generated on 27 May 2025, 04:17:01

using System;
using System.Collections.Generic;

using Riptide;
using Visus.Robotics.RosBridge;



namespace ros_messages.shape_msgs
{
    public class SolidPrimitiveMsg : ROSMessage
    {

        public const byte BOX = 1;
        public const byte SPHERE = 2;
        public const byte CYLINDER = 3;
        public const byte CONE = 4;
        public const byte BOX_X = 0;
        public const byte BOX_Y = 1;
        public const byte BOX_Z = 2;
        public const byte SPHERE_RADIUS = 0;
        public const byte CYLINDER_HEIGHT = 0;
        public const byte CYLINDER_RADIUS = 1;
        public const byte CONE_HEIGHT = 0;
        public const byte CONE_RADIUS = 1;

        #region Registration

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void _registerMessage () {
            ROSMessageFactory.registerMessage(_ROS_MESSAGE_ID, delegate(Message msg)
            {
                return new SolidPrimitiveMsg(msg);
            });
        }

        #endregion

        public byte type;
        public List<double> dimensions;

        public const string _ROS_MESSAGE_ID = "shape_msgs/SolidPrimitive";

        public SolidPrimitiveMsg(byte type = 0, List<double> dimensions = null) : base()
        {
            this.type = type;
            this.dimensions = dimensions;
        }

        public SolidPrimitiveMsg(Message message) : base()
        {
            this.deserializeFromMessage(message);
        }


        #region Serialization

        public override void serializeToMessage(Message message, bool includeHeader = true)
        {
            if (includeHeader) {
                message.AddString(_ROS_MESSAGE_ID);
            }
            message.AddByte(this.type);
            message.AddDoubles(this.dimensions.ToArray());
        }

        public override void deserializeFromMessage(Message message)
        {
            this.type = message.GetByte();
            this.dimensions = new List<double>(message.GetDoubles());
        }

        #endregion
    }
}
