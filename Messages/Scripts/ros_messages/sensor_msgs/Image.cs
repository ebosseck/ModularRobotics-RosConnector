// generated by RosbridgeMessageGenerator
// generated on 22 May 2025, 00:29:59

using System;
using System.Collections.Generic;

using Riptide;
using Visus.Robotics.RosBridge;

using ros_messages.std_msgs;

namespace ros_messages.sensor_msgs
{
    public class ImageMsg : ROSMessage
    {

        

        #region Registration

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void _registerMessage () {
            ROSMessageFactory.registerMessage(_ROS_MESSAGE_ID, delegate(Message msg)
            {
                return new ImageMsg(msg);
            });
        }

        #endregion

        public HeaderMsg header;
        public uint height;
        public uint width;
        public string encoding;
        public byte is_bigendian;
        public uint step;
        public List<byte> data;

        public const string _ROS_MESSAGE_ID = "sensor_msgs/Image";

        public ImageMsg(HeaderMsg header = null, uint height = 0, uint width = 0, string encoding = "", byte is_bigendian = 0, uint step = 0, List<byte> data = null) : base()
        {
            this.header = header;
            this.height = height;
            this.width = width;
            this.encoding = encoding;
            this.is_bigendian = is_bigendian;
            this.step = step;
            this.data = data;
        }

        public ImageMsg(Message message) : base()
        {
            this.deserializeFromMessage(message);
        }


        #region Serialization

        public override void serializeToMessage(Message message, bool includeHeader = true)
        {
            if (includeHeader) {
                message.AddString(_ROS_MESSAGE_ID);
            }
            this.header.serializeToMessage(message, includeHeader: false);
            message.AddUInt(this.height);
            message.AddUInt(this.width);
            message.AddString(this.encoding);
            message.AddByte(this.is_bigendian);
            message.AddUInt(this.step);
            message.AddBytes(this.data.ToArray());
        }

        public override void deserializeFromMessage(Message message)
        {
            this.header = new HeaderMsg();
            this.header.deserializeFromMessage(message);
            this.height = message.GetUInt();
            this.width = message.GetUInt();
            this.encoding = message.GetString();
            this.is_bigendian = message.GetByte();
            this.step = message.GetUInt();
            this.data = new List<byte>(message.GetBytes());
        }

        #endregion
    }
}
