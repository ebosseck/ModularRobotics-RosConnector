// generated by RosbridgeMessageGenerator
// generated on 22 May 2025, 00:29:59

using System;
using System.Collections.Generic;

using Riptide;
using Visus.Robotics.RosBridge;

using ros_messages.geometry_msgs;
using ros_messages.std_msgs;

namespace ros_messages.sensor_msgs
{
    public class ImuMsg : ROSMessage
    {

        

        #region Registration

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void _registerMessage () {
            ROSMessageFactory.registerMessage(_ROS_MESSAGE_ID, delegate(Message msg)
            {
                return new ImuMsg(msg);
            });
        }

        #endregion

        public HeaderMsg header;
        public QuaternionMsg orientation;
        public double[] orientation_covariance;
        public Vector3Msg angular_velocity;
        public double[] angular_velocity_covariance;
        public Vector3Msg linear_acceleration;
        public double[] linear_acceleration_covariance;

        public const string _ROS_MESSAGE_ID = "sensor_msgs/Imu";

        public ImuMsg(HeaderMsg header = null, QuaternionMsg orientation = null, double[] orientation_covariance = null, Vector3Msg angular_velocity = null, double[] angular_velocity_covariance = null, Vector3Msg linear_acceleration = null, double[] linear_acceleration_covariance = null) : base()
        {
            this.header = header;
            this.orientation = orientation;
            this.orientation_covariance = orientation_covariance;
            this.angular_velocity = angular_velocity;
            this.angular_velocity_covariance = angular_velocity_covariance;
            this.linear_acceleration = linear_acceleration;
            this.linear_acceleration_covariance = linear_acceleration_covariance;
        }

        public ImuMsg(Message message) : base()
        {
            this.deserializeFromMessage(message);
        }


        #region Serialization

        public override void serializeToMessage(Message message, bool includeHeader = true)
        {
            if (includeHeader) {
                message.AddString(_ROS_MESSAGE_ID);
            }
            this.header.serializeToMessage(message, includeHeader: false);
            this.orientation.serializeToMessage(message, includeHeader: false);
            message.AddDoubles(this.orientation_covariance, false);
            this.angular_velocity.serializeToMessage(message, includeHeader: false);
            message.AddDoubles(this.angular_velocity_covariance, false);
            this.linear_acceleration.serializeToMessage(message, includeHeader: false);
            message.AddDoubles(this.linear_acceleration_covariance, false);
        }

        public override void deserializeFromMessage(Message message)
        {
            this.header = new HeaderMsg();
            this.header.deserializeFromMessage(message);
            this.orientation = new QuaternionMsg();
            this.orientation.deserializeFromMessage(message);
            message.GetDoubles(9, this.orientation_covariance);
            this.angular_velocity = new Vector3Msg();
            this.angular_velocity.deserializeFromMessage(message);
            message.GetDoubles(9, this.angular_velocity_covariance);
            this.linear_acceleration = new Vector3Msg();
            this.linear_acceleration.deserializeFromMessage(message);
            message.GetDoubles(9, this.linear_acceleration_covariance);
        }

        #endregion
    }
}
