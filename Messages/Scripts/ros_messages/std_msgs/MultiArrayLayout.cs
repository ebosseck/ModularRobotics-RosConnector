// generated by RosbridgeMessageGenerator
// generated on 22 May 2025, 00:29:59

using System;
using System.Collections.Generic;

using Riptide;
using Visus.Robotics.RosBridge;

using ros_messages.std_msgs;

namespace ros_messages.std_msgs
{
    public class MultiArrayLayoutMsg : ROSMessage
    {

        

        #region Registration

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void _registerMessage () {
            ROSMessageFactory.registerMessage(_ROS_MESSAGE_ID, delegate(Message msg)
            {
                return new MultiArrayLayoutMsg(msg);
            });
        }

        #endregion

        public List<MultiArrayDimensionMsg> dim;
        public uint data_offset;

        public const string _ROS_MESSAGE_ID = "std_msgs/MultiArrayLayout";

        public MultiArrayLayoutMsg(List<MultiArrayDimensionMsg> dim = null, uint data_offset = 0) : base()
        {
            this.dim = dim;
            this.data_offset = data_offset;
        }

        public MultiArrayLayoutMsg(Message message) : base()
        {
            this.deserializeFromMessage(message);
        }


        #region Serialization

        public override void serializeToMessage(Message message, bool includeHeader = true)
        {
            if (includeHeader) {
                message.AddString(_ROS_MESSAGE_ID);
            }
            message.AddULong((ulong)this.dim.Count);
            for (int i = 0; i < this.dim.Count; i++) {
                this.dim[i].serializeToMessage(message, includeHeader: false);
            }
            message.AddUInt(this.data_offset);
        }

        public override void deserializeFromMessage(Message message)
        {
            ulong length = message.GetULong();
            this.dim = new List<MultiArrayDimensionMsg>();
            for (int i = 0; i < (int)length; i++) {
                MultiArrayDimensionMsg value = new MultiArrayDimensionMsg();
                value.deserializeFromMessage(message);
                this.dim.Add(value);
            }
            this.data_offset = message.GetUInt();
        }

        #endregion
    }
}
